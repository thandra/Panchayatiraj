/**
 * Core styles for the app.
 *
 * Here you will find all the styles that Moodle Mobile creates for you to use, as well
 * as all the necessary overrides for the app to look nice everywhere.
 *
 * Any style that cannot be re-used has to be placed in the its component or addon.
 *
 * There should always be a variable for anything that is styleable, but do not
 * over create variables try to re-use as manu as you can. Always remember to add !default
 * to your variable declarations to allow a themer to override in app.scss.
 */

/**
 * Variables
 */

// Bar content.
$bar-content-bg: #f70 !default;
$bar-content-border: transparent !default;
$bar-content-text: #fff !default;

// Small avatar ideal for icons.
$item-media-width: 32px !default;
$item-media-height: 32px !default;

// Howto tips.
$item-howto-color: #d9edf7 !default;

// Messages.
$item-message-bg: $stable !default;
$item-message-note-text: #999 !default;
$item-message-note-font-size: $font-size-small !default;
$item-message-mine-bg: rgba(17, 193, 243, .1) !default;

// Completion
$completion-img-width: 24px !default;

// Disabled items.
$item-disabled-color: #999 !default;

// Warnings (energized).
$mm-warning-color: $energized !default;

// Errors (red).
$mm-error-color: #c00 !default;

// Timer variables.
$mm-timer-warn-color:     #f00 !default;
$mm-timer-color:          #fff !default;
$mm-timer-iterations:     15 !default;

// Text with icon.
$mm-text-with-icon-height: 22px !default;

// Smaller button icon.
$mm-button-icon-small-height: 22px !default;

/**
 * App Branding
 */
.mm-bglogo {
  background-color: white; /* Change this to add a bg image or change color */
  background-repeat: no-repeat;
  background-position: center center;
  width: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
}

.mm-logo {
  background-image: url('../img/moodle.png'); /* Change logo here */
  background-repeat: no-repeat;
  background-position: center center;
  width: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  text-align: center;
}

.mm-logo:before {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
  margin-top: 120px; /* Change this to place spinner under the logo (usually double of the logo size) */
}

/**
 * Styles revert.
 */

em {
  font-style: italic;
}

/**
 * Styles.
 */

.mm-big   { font-size: 115%; }

.item-stacked-label{
  background-color: $item-default-bg;
}

// Default bar.
.bar-content {
  @include bar-style($bar-content-bg, $bar-content-border, $bar-content-text);
  .button {
    @include button-style($bar-content-bg, $bar-content-border, $bar-content-bg, $bar-content-border, $bar-content-text);
    @include button-clear(#fff, $bar-title-font-size);
  }
}

// Define an alternative way to set a heading in an item without using a heading tag.
// This is done for accessibility reasons when a heading is semantically incorrect.
.item .item-heading {
  @extend h2;
}

.item.item-text-wrap .item-heading {
  overflow: visible;
  white-space: normal;
}

// More options for grids.
.col-65 {
  @include flex(0, 0, 65%);
  max-width: 65%;
}
.col-60 {
  @include flex(0, 0, 60%);
  max-width: 60%;
}
.col-40 {
  @include flex(0, 0, 40%);
  max-width: 40%;
}

// Media item, ideal for icons.
.item-media {
  @extend .item-avatar;
  padding-left: $item-media-width + ($item-padding * 2);
  min-height: $item-media-width + ($item-padding * 2);
  > img:first-child {
    max-width: $item-media-width;
    max-height: $item-media-height;
    border-radius: 0;
  }
  p {
    margin: 0px;
  }
  &.item-button-right {
    > .button,
    > .buttons,
    > .spinner {
      top: $item-padding;
    }
  }
}

// Howto tips.
.item.item-howto {
  padding-bottom: 12px;
  padding: 9px;
  margin-bottom: 12px;
  background-color: $item-howto-color;
  border-color: $item-howto-color;
  color: #666;

  &.item-icon-left {
    padding-left: 35px;

    .icon {
      left: 4px;
    }
  }
}

// Message item.
.item-message {
  clear: both;
  max-width: 80%;
  border-radius: 12px;
  border-width: 0;
  padding: 4px 10px;
  margin: 4px 0;
  background-color: $item-message-bg;
  float: left;

  .item-note {
    color: $item-message-note-text;
    font-size: $item-message-note-font-size;
    margin-left: 20px;
  }
}

.item-message .item-content {
  background-color: $item-message-bg;
  padding: 0;
}

// Defines when an item-message is the user's.
.item-message-mine {
  background-color: $item-message-mine-bg;
  float: right;
  max-width: 80%;

  .spinner {
    float: right;
    margin-left: 5px;
    margin-right: -3px;
    margin-top: 2px;
    margin-bottom: -2px;

    svg {
      width: 16px;
      height: 16px;
    }
  }
}

.item-message-mine .item-content {
  background-color: transparent;
  padding: 0;
}

// Defines a "disabled" item.
.item.item-disabled,
.platform-android .item.item-disabled {
  color: $item-disabled-color;
}

// Avoid adding too much padding.
.item-complex .item-checkbox .item-content {
  padding: 0;
}

// Large centered avatar.
.item-avatar-center {
    @extend .item-avatar;
    text-align: center;
    padding-left: 16px;
    &.item-complex .item-content {
        text-align: center;
        padding-left: 49px;
    }
    > img:first-child,
    &.item-complex .item-content > img:first-child,
    img.avatar {
        position: static;
        width: 100px;
        height: 100px;
        max-width: 100px;
        max-height: 100px;
        margin-bottom: 10px;
        border-radius : 50%;
        padding: 4px;
        border: 1px solid #ddd;
    }
}

.user-with-avatar {
  position: relative;
  z-index: 2;
  display: block;
  padding: 4px;
  padding-left: 56px;
  min-height: 48px;
}
.user-with-avatar > img:first-child {
    position: absolute;
    top: 4px;
    left: 4px;
    max-width: 40px;
    max-height: 40px;
    width: 100%;
    height: 100%;
    border-radius: 50%;
}

// Split pane.
.mm-split-pane {
  @include display-flex();
  @include align-items(stretch);
  width: 100%;
  height: 100%;
}

.mm-split-pane-menu {
  overflow-y: auto;
  width: 100%;
  height: 100%;
  position: relative;
}

.mm-split-pane-content {
  @include flex(1, 0, auto);
  position: relative;
  display: none;
}

.tablet {
  .mm-split-pane-menu {
    @include flex(0, 0, $menu-width);
    width: $menu-width;
    border-right: 1px solid #ddd;
  }
  .mm-split-pane-content {
    display: block;
  }
}

// Spinners.
.button-block {
  .spinner {
    position: absolute;
    right: $button-padding;
    padding-top: floor(($button-height + ($button-border-width * 2) + 1 - 28) / 2);
    line-height: 28px;
  }
}
.item-button-right {
  > .spinner {
    // Copied from .item-button-right > .button.
    @include display-flex();
    @include align-items(center);
    position: absolute;
    top: ceil($item-padding / 2);
    right: $item-padding;
    min-width: $item-icon-font-size + ($button-border-width * 2);
    min-height: $item-icon-font-size + ($button-border-width * 2);
    font-size: $item-button-font-size;
    line-height: $item-button-line-height;
  }
}

// Buttons.
.item-button-right,
a.item.item-button-right,
button.item.item-button-right {
  &.item-2-button-right {
    padding-right: $item-padding * 7;
  }
  &.item-3-button-right {
    padding-right: $item-padding * 10;
  }
}

/**
 * Core directives.
 */
.mm-iframe {
  position: relative;
  max-height: 100%;
  max-width: 100%;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

// mm-format-text can have elements with float. These styles makes sure height is calculated right.
.mm-content-with-float {
  display: inline-block;
  width: 100%;
}

// Fix lists styles in mm-format-text.
mm-format-text, *[mm-format-text] {
  ul, ol {
    -webkit-padding-start: 40px;
  }
  ul {
    list-style: disc;
  }
  ol {
    list-style: decimal;
  }
}

.mm-loading-container {
    width: 100%;
    text-align: center;
    margin-top: 10px;
}

.mm-loading-content {
  height: 100%;
}

mm-loading.mm-loading-noheight .mm-loading-content {
  height: auto;
}

// Align ion-spinner right
.spinner-right {
  position: absolute;
  top: 8px;
  right: 16px;
}

.mm-split-item-selected, .mm-split-item-selected .item {
  border-color: #ccc;
  background-color: #D9D9D9;
}

.item.item-text-wrap.item-completion { // Add .item and .item-text-wrap to give more priority to the rule, otherwise it's overridden by Ionic styles.
  padding-right: $item-icon-font-size + ($button-border-width * 2) + $item-padding * 3 + $completion-img-width;
}

.mm-completion-container {
  // Based on .item-checkbox .checkbox and .item-checkbox.item-checkbox-right
  position: absolute;
  top: 50%;
  right: $item-padding / 2;
  margin-right: $item-icon-font-size + ($button-border-width * 2) + ($item-padding * 2);
  margin-top: ($completion-img-width / 2) * -1;

  img {
    float: right;
    width: $completion-img-width;
  }
}

.mm-media-adapt-width {
  max-width: 100%;
}
img.mm-media-adapt-width {
  height: auto;
}

.mm-adapted-img-container {
  position: relative;
}
.mm-image-viewer-icon {
  position: absolute;
  right: 10px;
  bottom: 10px;
  color: black;
  font-size: 20px;
  border-radius: 5px;
  background: rgba(255, 255, 255, .5);
  width: 30px;
  height: 30px;
  text-align: center;
  line-height: 30px;
}

// Remove padding-top and bottom from navigation bar to minimize height used.
mm-navigation-bar {
  .row {
    padding-top: 0px;
    padding-bottom: 0px;
  }
  .col {
    padding-top: 0px;
    padding-bottom: 0px;
  }
}

// Accessibility: text 'seen' by screen readers but not visual users.
.accesshide {
  position: absolute;
  left: -10000px;
  font-weight: normal;
  font-size: 1em;
}

// When using .item and .row in the same element, .row's padding prevails. Use this class to keep .item's padding.
.item.row.mm-item-padding {
  padding: $item-padding;
}

p.mm-error {
  color: $mm-error-color;
}

.mm-warning {
  border-bottom: 3px solid $mm-warning-color;
  padding: $card-padding;
  box-shadow: $card-box-shadow;
  margin: 20px 10px;
  background-color: #fff;

  i.icon:before {
      color: $mm-warning-color;
      font-size: 125%;
  }
}

// Extra attributes to ionic classes to force frames via directive 100% height.

.scroll {
  height: 100%;
}

.iframe-wrapper {
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  height: auto;
  width: auto;
  position: absolute !important; // Position fixed causes problems in Android 4.1-4.3.
}

.mm-has-navigation-bar {
  .iframe-wrapper {
    top: $button-height + 5px;
  }
}

.mm-bar-button-image, .bar .button.mm-bar-button-image {
  padding: 0;
  width: 100%;
  height: 100%;
  max-width: $button-bar-button-height - 1;
  max-height: $button-bar-button-height - 1;
  border-radius: 50%;
}

.badge.badge-inline {
  display: inline-block;
  position: relative;
  top: initial;
  right: initial;
  white-space: normal;
}

// Timer.
mm-timer {
  display: block;
}

// Style timer in items.
.item mm-timer.mm-timer, mm-timer.mm-timer.item {
  p, span, label {
    color: $item-default-text;
    font-size: $item-font-size;
  }
}

// Create the timer warning colors. Go from $mm-timer-color to $mm-timer-warn-color.
@for $i from 0 through $mm-timer-iterations {
  mm-timer.mm-timer.mm-timer-timeleft-#{$i} {
    background-color: mix($mm-timer-color, $mm-timer-warn-color, ($i / $mm-timer-iterations) * 100);
  }
}

.mm-monospaced {
  font-family: Andale Mono,Monaco,Courier New,DejaVu Sans Mono,monospace;
}

.mm-bold {
  font-weight: bold;
}

// Context Menu

.popover.mm-context-menu {
  width: 320px;
}

// Inline icons and inputs.

.mm-text-with-icon-right {
  line-height: $mm-text-with-icon-height;
  .icon {
    font-size: $mm-text-with-icon-height;
    padding: 0 5px;
    color: $positive;
  }
}

.mm-full-width {
  width: 100%;
}

.item-input-inset.mm-input-inset-no-padding {
  padding: 0;
}

.button.mm-button-icon-small {
  padding: 0 3px;
  min-height: $mm-button-icon-small-height;

  .icon:before {
    font-size: $mm-button-icon-small-height;
  }
}

.item-input-wrapper ~ .button.mm-button-icon-small {
  margin-left: 5px;
}

// This is to allow clicks in links inside buttons.
.mm-button-with-inner-link, .button.mm-button-with-inner-link {
  &:after {
    display: none;
  }
}

// This is to allow clicks in radio/checkbox content.
mm-format-text {
  audio, video, a, iframe {
    pointer-events: auto;
  }
}

// Squared checkboxes.
.checkbox input:before, .checkbox-icon:before {
  border-radius: 0;
}

.item-title {
  border: 0;
  border-bottom: 1px solid #ddd;
  margin-bottom: 10px;
  padding: 5px;
  background-color: white;

  input {
    font-size: 20px;
    line-height: 22px;
    width: 100%;
  }
}

.item-noborder {
  border: 0;
  padding: 0;
}

.padding .mm-searchbox .item-input-inset {
  padding-top: 0;
  padding-left: 0;
  padding-right: 0;
}

/**
 * This CSS uses adjacent selectors instead of general sibling (~) selectors
 * for ion radio that are broken in iOS 9 UIWebView.
 *
 * To apply the patch, include this CSS after your ionic.css include.
 */
  .item-radio input:checked + .radio-content .item-content {
    /* style the item content when its checked */
    background: #f7f7f7;
  }

  .item-radio input:checked + .radio-content .radio-icon {
    /* show the checkmark icon when its checked */
    visibility: visible;
  }

/** Hide PTR when slowly released */
.scroll-refresher .ionic-refresher-content.ionic-refresher-with-text {
  bottom: 20px;
}

@media only screen and (max-width: 768px) {
  .hidden-phone {
    display: none !important;
  }
}
/**
 * RichTextEditor.
 */

.mm-textarea {
  width: 100%;
  height: 200px;
  resize: none;
}

.item.mm-item-has-rich-text-editor {
  padding: 0;
  display: block;

  .input-label, .mm-textarea {
    padding-left: $item-padding;
  }
}

.mm-rich-text-editor-container {

  .cke.cke_chrome {
    border: 0;
    box-shadow: none;
  }

  .cke_bottom.cke_expanded {
    height: auto;
  }

  .cke_bottom .cke_path {
    display: none;
    float: none;
    margin: 0;
  }

  .cke_bottom.cke_expanded .cke_path {
    display: block;
  }

  textarea.cke_source {
    padding: 20px;
    box-sizing: border-box;
  }
}

.mm-rich-text-editor-container,
.cke_inner.cke_maximized {

  .cke_bottom {
    padding: 0;
    border-color: #ddd;
    box-shadow: none;
    background: #F2F2F2;
    height: 30px;
  }

  .cke_button:first-child, .cke_button:last-child {
    border-radius: 0;
  }

  .cke_button,
  a.cke_combo_button,
  .cke_toolbox_collapser {
    background: white;
    background-image: none;
    box-shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);
    padding: 5px 8px;
    border-radius: 0;
    border: 0;
    margin: 1px;
  }

  a.cke_combo_button {
    min-height: 26px;
    padding: 1px;
  }

  .cke_button:hover,
  a.cke_combo_button:hover,
  .cke_combo_off a.cke_combo_button:hover,
  .cke_toolbox_collapser:hover {
    background-image: radial-gradient(ellipse at center, #ffffff 60%,#dfdfdf 100%);
    background-color: #ebebeb;
  }

  .cke_button:active,
  a.cke_combo_button:active,
  .cke_toolbox_collapser:active {
    background-image: radial-gradient(ellipse at center, #ffffff 50%, #dfdfdf 100%);
    background-color: #ebebeb;
    border: 0;
  }

  .cke_toolgroup {
    margin: 0;
    border: 0;
    background: none;
    background-image: none;
    border-radius: 0;
    box-shadow: none;
  }

  .cke_toolbar_separator,
  .cke_toolbar_break {
    clear: none;
    display: none;
  }

  .cke_toolbox_collapser {
    padding-top: 9px;
    padding-bottom: 8px;
    position: absolute;
    top: 0;
    right: 0;
  }

  .cke_toolbox_main {
    margin-right: 30px;
    float: left;
    display: block !important;
  }

  .cke_button__source_label {
    display: none;
  }
}

.cke_inner.cke_maximized {
  .cke_bottom {
    height: auto;
  }

  .cke_toolbox_collapser {
    display: none;
  }

  .cke_toolbox_main {
    margin: 0;
  }
}

// Disable textarea copy to prevent errors in iOS.

.previous-input-focus.mm-textarea, .cloned-text-input + textarea.mm-textarea {
  width: 100%;
  position: relative !important;
  left: 0px;
}

input[type="text"].cloned-text-input, textarea.cloned-text-input{
  display: none;
}

// InApp notifications.

.mm-inapp-notification-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 11;
  width: 100%;
  opacity: 0;
  margin-top: -130px;
  -webkit-transition: 0.5s all ease-in-out;
  transition: 0.5s all ease-in-out;

  &.active {
    opacity: 1;
    margin-top: 0;
  }

  &.hide {
    opacity: 0;
    margin-top: -130px;
    display: block;
    pointer-events: none;
  }

  .mm-inapp-notification {
    position: static;
    height: auto;
    width: auto;
    max-width: 400px;
    margin-left: auto  !important;
    margin-right: auto  !important;
    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3);
    padding: 2px 0;

    .scroll-content {
      position: relative;
      top: auto;
      bottom: auto;
      left: auto;
      right: auto;
    }
  }
}

@media only screen and (max-width: 400px) {
  .mm-inapp-notification-backdrop .mm-inapp-notification {
    margin-left: 6px !important;
    margin-right: 6px !important;
  }
}
